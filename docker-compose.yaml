version: '2.4'

volumes:
  resin-data:
  mqtt-conf:
  mqtt-data:

networks:
  web:
    external: true

x-common: &common
  tty: true
  restart: unless-stopped

services:
  traefik:
    image: traefik:v3.4
    command:
    - --accesslog=true
    - --api.dashboard=true
    - --api.insecure=true
    - --api=true
    - --entrypoints.web.address=:80
    - --entrypoints.metrics.address=:9090
    - --metrics.prometheus.entryPoint=metrics
    - --ping=true
    - --providers.docker.endpoint=unix:///var/run/balena.sock
    - --providers.docker.exposedbydefault=false
    - --providers.docker=true
    ports:
    - 80:80
    networks:
    - web
    environment:
      DBUS_SYSTEM_BUS_ADDRESS: unix:path=/host/run/dbus/system_bus_socket
    labels:
      traefik.enable: "true"
      traefik.http.routers.traefik-dashboard.rule: PathPrefix(`/traefik`) || PathPrefix(`/api`)
      traefik.http.routers.traefik-dashboard.entrypoints: web
      traefik.http.routers.traefik-dashboard.service: api@internal
      traefik.http.routers.traefik-dashboard.middlewares: traefik-stripprefix@docker
      traefik.http.middlewares.traefik-stripprefix.stripprefix.prefixes: /traefik
      io.balena.features.balena-socket: 1
      io.balena.features.dbus: 1

  gpsd:
    build: src/gpsd
    <<: *common
    entrypoint:
    - /bin/sh
    - -c
    ports:
    - 2947:2947
    command:
    - |
      # https://docs.balena.io/reference/OS/configuration/
      # Bus 001 Device 005: ID 1546:01a7 u-blox AG - www.u-blox.com u-blox 7 - GPS/GNSS Receiver
      # SUBSYSTEM=="tty", ATTRS{idVendor}=="1546", ATTRS{idProduct}=="01a7", SYMLINK+="gps"
      exec gpsd -GNn -D5 -F /var/run/gpsd.sock /dev/gps "$@"

    healthcheck:
      test:
      - |
        pgrep gpsd
    devices:
    - /dev/gps
    # https://forums.balena.io/t/shared-memory-between-container-docker-compose/314435
    # TBC: ideally avoid "host"
    ipc: host
    #ipc: "shareable"
    environment:
      DBUS_SYSTEM_BUS_ADDRESS: unix:path=/host/run/dbus/system_bus_socket
    labels:
      io.balena.features.dbus: 1

  # https://kovasky.me/blogs/chronyd/
  chrony:
    build: src/chrony
    <<: *common
    entrypoint:
    - /bin/sh
    - -c
    ports:
    - "123:123/udp"
    command:
    - |
      cat <<EOF >/tmp/chrony.conf
      allow
      driftfile /var/lib/chrony/chrony/drift
      refclock SHM 0 delay 0.5 refid NMEA
      rtcsync
      EOF

      exec chronyd -nf /tmp/chrony.conf "$@"

    tmpfs:
    - /etc/chrony:rw,mode=1750
    - /run/chrony:rw,mode=1750
    - /var/lib/chrony:rw,mode=1750
    healthcheck:
      test:
      - |
        pgrep chronyd
    cap_add:
    - SYS_TIME
    depends_on:
    - gpsd
    ipc: host
    #ipc: "service:gpsd"
    environment:
      DBUS_SYSTEM_BUS_ADDRESS: unix:path=/host/run/dbus/system_bus_socket
    labels:
      io.balena.features.dbus: 1

  # https://hub.docker.com/r/instantlinux/nut-upsd
  # https://anton.belodedenko.me/odd-jobs/
  upsd:
    image: instantlinux/nut-upsd:2.8.2-r2
    <<: *common
    ports:
    - 3493:3493
    environment:
      PORT: /dev/ups
      DBUS_SYSTEM_BUS_ADDRESS: unix:path=/host/run/dbus/system_bus_socket
    healthcheck:
      test:
      - |
        pgrep upsd
    cap_add:
    - SYS_ADMIN
    # https://docs.balena.io/reference/OS/configuration/
    # Bus 001 Device 004: ID 067b:2303 Prolific Technology Inc. USB-Serial Controller
    # SUBSYSTEM==\"tty\", ATTRS{idVendor}==\"067b\", ATTRS{idProduct}==\"2303\", SYMLINK+=\"ups\"
    devices:
    - /dev/ups
    labels:
      io.balena.features.dbus: 1

  # https://github.com/SuperioOne/nut_webgui/pkgs/container/nut_webgui
  nut_webgui:
    image: ghcr.io/superioone/nut_webgui:0.4.2
    <<: *common
    environment:
      UPSD_ADDR: upsd
    healthcheck:
      test:
      - |
        wget -qO- localhost:9000/probes/readiness | grep -q READY
    depends_on:
    - upsd
    networks:
      - web
    labels:
      traefik.enable: "true"
      traefik.http.routers.nut-webgui.rule: PathPrefix(`/nut`)
      traefik.http.routers.nut-webgui.entrypoints: web
      traefik.http.routers.nut-webgui.middlewares: nut-webgui-stripprefix@docker
      traefik.http.services.nut-webgui.loadbalancer.server.port: 9000
      traefik.http.middlewares.nut-webgui-stripprefix.stripprefix.prefixes: /nut

  bluetoothctl:
    build: src/bluetoothctl
    <<: *common
    entrypoint:
    - /bin/bash
    - -c
    command:
    - |
      if [[ -n "$BT_DEVICES" ]]; then
          while true; do
              for btd in ${BT_DEVICES}; do
                  if ! bluetoothctl devices Connected | grep -q ${btd}; then
                      bluetoothctl connect ${btd}
                  fi
              done
              bluetoothctl devices Connected
              sleep 60
          done
      else
          exec sleep infinity
      fi

    environment:
      DBUS_SYSTEM_BUS_ADDRESS: unix:path=/host/run/dbus/system_bus_socket
    labels:
      io.balena.features.dbus: 1

  # https://hub.docker.com/_/eclipse-mosquitto
  mqtt:
    image: eclipse-mosquitto:2
    <<: *common
    volumes:
    - mqtt-conf:/mosquitto/config
    - mqtt-data:/mosquitto/data
    healthcheck:
      test:
      - |
        mosquitto_pub -h mqtt -p 1883 -t 'test/topic' -m 'ping'

  jbdtool:
    build: src/jbdtool
    <<: *common
    entrypoint:
    - /bin/bash
    - -c
    command:
    - |
      if [[ -n "$BT_DEVICE_0" ]]; then
          jbdtool -ajt bt:${BT_DEVICE_0} \
            -i ${UPDATE_INTERVAL:-300} \
            -m ${MQTT_HOST:-mqtt}:${MQTT_CLIENT:-jbdtool}:${BT_DEVICE_0}
      else
          exec sleep infinity
      fi

    environment:
      DBUS_SYSTEM_BUS_ADDRESS: unix:path=/host/run/dbus/system_bus_socket
    depends_on:
    - bluetoothctl
    - mqtt
    labels:
      io.balena.features.dbus: 1

  node-red:
    build: src/node-red
    <<: *common
    entrypoint:
    - /bin/bash
    - "-c"
    user: root  # start as root to fix permissions
    command:
    - |
      mkdir -p /data
      chown -R 1000:1000 /data

      if [[ -n "${__NODE_RED_BACKUP_EXPORT_JSON__}" ]] && ! [[ -f /data/flows.json ]]; then
          echo "${__NODE_RED_BACKUP_EXPORT_JSON__}" > /data/flows.json
      fi

      exec su node-red -c "npm --no-update-notifier --no-fund start \
        --cache /data/.npm \
        -- \
        --userDir /data \
        '$@'"

    volumes:
    - resin-data:/data
    networks:
    - web
    - default
    depends_on:
    - mqtt
    labels:
      traefik.enable: "true"
      traefik.http.routers.node-red.rule: PathPrefix(`/`)
      traefik.http.routers.node-red.entrypoints: web
      traefik.http.services.node-red.loadbalancer.server.port: 1880
      io.balena.features.dbus: 1
      io.balena.features.supervisor-api: 1
      io.balena.features.balena-api: 1
